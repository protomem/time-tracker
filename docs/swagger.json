{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/status": {
            "get": {
                "description": "Check if the server is up and running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Server Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Show all users by filters with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Show Users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User surname",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User patronymic",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User passport serie",
                        "name": "passportSerie",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "User passport number",
                        "name": "passportNumber",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.responseShowUsers"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/validator.Validator"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "description": "Add new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Add User",
                "parameters": [
                    {
                        "description": "Passport serie and number",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.requestAddUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.responseAddUser"
                        }
                    },
                    "400": {
                        "description": "Bad request input",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/validator.Validator"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "put": {
                "description": "Update user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New user data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.requestUpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.responseUpdateUser"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "422": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/validator.Validator"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request input",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.requestAddUser": {
            "type": "object",
            "properties": {
                "passportNumber": {
                    "type": "string"
                }
            }
        },
        "main.requestUpdateUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "passportNumber": {
                    "type": "integer"
                },
                "passportSerie": {
                    "type": "integer"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "main.responseAddUser": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "main.responseShowUsers": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        },
        "main.responseUpdateUser": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/model.User"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passportSerie": {
                    "type": "integer"
                },
                "passwortNumber": {
                    "type": "integer"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "validator.Validator": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fieldErrors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    }
}